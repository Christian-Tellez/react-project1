{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","selected","onChangeFilter","className","value","onChange","event","target","Card","props","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","datapoint","totalMaximum","max","dataPoint","ExpensesChart","expenses","chartDataPoints","getMonth","Expenses","useState","selectedFilter","setSelectedFilter","fiteredExpenses","filter","toString","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","DUMMY_EXPENSES","App","setExpenses","console","log","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3526e088.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = ({ selected, onChangeFilter }) => {\r\n\r\n  const filterChangeHandler = (event) => {\r\n    onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={selected} onChange={filterChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = ({ items }) => {\r\n  if (items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {items.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = ({ value, maxValue, label }) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (maxValue > 0) {\r\n    barFillHeight = Math.round((value / maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = ({ dataPoints }) => {\r\n  const dataPointValues = dataPoints.map(datapoint => datapoint.value)\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = ({ expenses }) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = ({ items }) => {\r\n  const [selectedFilter, setSelectedFilter] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setSelectedFilter(selectedYear);\r\n  };\r\n\r\n  const fiteredExpenses = items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === selectedFilter;\r\n  });\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={selectedFilter}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={fiteredExpenses}/>\r\n        <ExpensesList items={fiteredExpenses} />\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = ({ onSaveExpenseData, onCancel }) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = ({ onAddExpense }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"New TV\",\r\n    amount: 799.49,\r\n    date: new Date(2021, 2, 12),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    console.log(\"In App.js: \");\r\n    console.log(expense);\r\n\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Let's get started!</h2>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}